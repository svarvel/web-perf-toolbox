#!/bin/bash
# Collection of commonly used functions
# Author: Matteo Varvello

# default params 
pfctl_path="pfctl.rules" 

# simple function for logging
myprint(){
    timestamp=`date +%s`
    if [ $DEBUG -gt 0 ]
    then
        if [ $# -eq  0 ]
        then
            echo -e "[ERROR][$timestamp]\tMissing string to log!!!"
        else
        	if [ $# -eq  1 ]
			then
	            echo -e "[$0][$timestamp]\t" $1
			else
	            echo -e "[$0][$timestamp][$2]\t" $1
			fi
        fi
    fi
}

# clean a file
clean_file(){
    if [ -f $1 ]
    then
        rm $1
    fi
}

# kill pending processes
my_kill(){
    for pid in `ps aux | grep "$1" | grep -v "grep" | grep -v "master" | grep -v "experiment-manager.sh" | awk '{print $2}'`
    do
        kill -9 $pid
    done
}

# stop throttling
throttle_stop () {
	sudo dnctl -q flush
	sudo dnctl -q pipe flush
	sudo pfctl -f /etc/pf.conf > /dev/null 2>&1
	sudo pfctl -q -E > /dev/null 2>&1
	sudo pfctl -q -d
}

# start throttling
throttle_start () {
	uplink=$1
	downlink=$2
	delay=$3
	loss=$4
    queue_size=100
    if [ $# -eq 5 ] 
    then
        queue_size=$5
    fi 
    if [ $# -eq 6 ] 
    then
        queue_size=$5
        pfctl_path=$6
    fi 
    myprint "Applying throttling -- UP: $uplink DOWN: $downlink DELAY: $delay LOSS: $loss QUEUE: $queue_length Pfctl: $pfctl_path"
	
	# flush previous pipes and rules 
	sudo dnctl -q flush
	sudo dnctl -q pipe flush

	# Q: can this be merged in just one with the above
	sudo dnctl -q pipe 1 config delay 0ms noerror
	sudo dnctl -q pipe 2 config delay 0ms noerror
	
	# Q: can this move later?
	sudo pfctl -f ${pfctl_path} 
	
	sudo dnctl -q pipe 1 config bw $downlink delay $delay plr $loss noerror queue $queue_size
	sudo dnctl -q pipe 2 config bw $uplink delay $delay plr $loss noerror	queue $queue_size	
	
	# Q: what is this doing? 
	sudo pfctl -E > /dev/null 2>&1
}


# start throttling
throttle_start_new () {
	queue_size=100
	uplink=$1
	downlink=$2
	delay=$3
	loss=$4
	num_pipes=$5
	pfctl_file=$6
	
	# logging 
	echo "Applying throttling -- UP: $uplink DOWN: $downlink DELAY: $delay LOSS: $loss QUEUE: $queue_size NUM_PIPES: $num_pipes PFCTL_FILE: $pfctl_file"
	
	# flush previous rules 
	sudo dnctl -q flush
	sudo dnctl -q pipe flush
	
	# create the pipes
	for ((i=1; i<=num_pipes; i++))
	do 
		sudo dnctl -q pipe $i config delay 0ms noerror
		sudo dnctl -q pipe $i config bw $downlink delay $delay plr $loss noerror	queue $queue_size
		
		let "i++"		
		sudo dnctl -q pipe $i config delay 0ms noerror		
		sudo dnctl -q pipe $i config bw $uplink delay $delay plr $loss noerror queue $queue_size
	done

	# assign the pipes to each domain
	sudo pfctl -f $pfctl_file
	
	# activate the pipes 
    sudo pfctl -E > /dev/null 2>&1
}


# helper function to execute command on rasberry pi
execute_remote_command(){
	echo "Executing command <<$1>> at $2"
	ssh $2 $1
}
